{"version":3,"file":"static/js/967.54bedda5.chunk.js","mappings":"mNAEaA,EAAYC,EAAAA,GAAAA,IAAH,2GAMTC,EAAcD,EAAAA,GAAAA,IAAH,oKAUXE,EAAWF,EAAAA,GAAAA,GAAH,mG,SCfRG,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAI,WAAWH,IAErB,SAACN,EAAD,UACGK,EAAMK,KAAI,SAACC,GAAD,OACT,SAACT,EAAD,WACE,UAAC,KAAD,CAAMU,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMT,GAA/C,WACE,gBAAKU,IAAK,sCAAsCL,EAAKM,YAAaC,IAAKP,EAAKQ,kBAC5E,SAAChB,EAAD,UAAWQ,EAAKQ,qBAHFR,EAAKE,GADd,KAUhB,C,qNCJYO,EAAanB,EAAAA,GAAAA,KAAH,4MAaToB,EAAkBpB,EAAAA,GAAAA,OAAF,yZAsBbqB,EAAuBrB,EAAAA,GAAAA,KAAF,mOAazBsB,EAAkBtB,EAAAA,GAAAA,MAAH,gP,SCxDfuB,EAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACxB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAEE,UAACR,EAAD,CAAaS,SAZM,SAAAC,GACnBA,EAAIC,iBACsB,KAAtBJ,EAAWK,OAKhBP,EAAOE,GAJJM,EAAAA,GAAAA,MAAY,+BAMf,EAGC,WACA,SAACZ,EAAD,CAAkBa,KAAK,SAAvB,UACE,SAACZ,EAAD,WAAuB,SAAC,MAAD,CAAWa,KAAM,UAG1C,SAACZ,EAAD,CACEW,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,MAAOZ,EACPa,SA3BiB,SAAAV,GACnBF,EAAcE,EAAIW,cAAcF,MAAMG,cACvC,MA6BF,E,SC5BYC,EAAQ,WACjB,OAA6BjB,EAAAA,EAAAA,UAAS,eAAtC,eAAQkB,EAAR,KAAgBC,EAAhB,KACA,GAA2BnB,EAAAA,EAAAA,UAAU,MAArC,eAAQrB,EAAR,KAAeyC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,SAuCvC,OA5BAC,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAU,CAAC,IAIJG,EAJG,mCAIlB,8GAE6BC,EAAAA,EAAAA,IAAW,EAAEC,GAF1C,UAG8B,KADhBlD,EAFd,QAGamD,QAAQC,OAHrB,uBAIQxB,EAAAA,GAAAA,MAAY,wDACZY,EAAUa,EAAAA,GAAAA,MACVT,EAAgB,CAAC,GANzB,0BASIH,EAASzC,EAAMmD,SACfX,EAAUa,EAAAA,GAAAA,UAVd,kDAWiBb,EAAUa,EAAAA,GAAAA,UACvBzB,EAAAA,GAAAA,MAAY,wCAAwC,CAAC0B,SAAU,IACjEC,SAAU,eAbZ,0DAJkB,qDAACf,EAAUa,EAAAA,GAAAA,SACtB,IAAMH,EAAS,UACZM,EAAAA,GADY,gCACoBC,EAAAA,GADpB,kBACoCZ,EADpC,UAoBtBG,GACC,CAEA,GAAE,CAACH,EAAWD,IAGH,YAATL,GAA2B,SAACmB,EAAA,EAAD,KAG1B,iCACO,SAACvC,EAAD,CAAWC,OAxCG,SAAAuC,GAErBf,EAD2B,KAATe,EAAc,CAAEA,MAAAA,GAAU,CAAC,EAKhD,IAmCoB,YAATpB,IAAuB,SAACmB,EAAA,EAAD,IACZ,aAAXnB,GACV,SAAC,IAAD,CAAWvC,MAAOA,IAAqB,OAQxC,EACD,G","sources":["components/FilmList/FilmList.styled.js","components/FilmList/FilmList.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/Movies.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 280px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\nimg { min-height: 455px;\n    height: 455px;}\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const FilmName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\nimport { Container, CardWrapper, FilmName } from \"./FilmList.styled\";\n\nexport const FilmsList = ({ films }) => {\n  const location = useLocation();\n  console.log(\"FilmList\",location)\n  return (\n    <Container>\n      {films.map((film) => (\n        <CardWrapper key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            <img src={'https://www.themoviedb.org/t/p/w500'+film.poster_path} alt={film.original_title} />\n            <FilmName>{film.original_title}</FilmName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n// let imgSrc = 'https://www.themoviedb.org/t/p/w500' + poster_path;\n/* <ul>\n{trendingFilms?.map(film => (\n  <style.item key={film.id}>\n    <Link to={`/movies/${film.id}`}>{film.title}</Link>\n  </style.item>\n))}\n</ul> */","import styled from \"styled-components\";\n//import { HiSearch } from \"react-icons/hi\";\n\n\n\n\n// export const Wrapper = styled.div`\n//   display: inline-flex;\n//   align-items: center;\n//   position: relative;\n//   margin-bottom: 16px;\n//   text-transform: uppercase;\n// `;\n    \nexport const SearchForm = styled.form ` \ndisplay: flex;\nalign-items: center;\nwidth: 100%;\nmax-width: 300px;\nbackground-color: #fff;\nborder-radius: 3px;\nborder:1px solid black;\noverflow: hidden;\nmargin-bottom:16px`\n       \n      \n      \n export const SearchFormButton =styled.button `\n display: inline-block;\n width: 48px;\n height: 48px;\n border: 0;\n background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n background-size: 40%;\n background-repeat: no-repeat;\n background-position: center;\n opacity: 0.6;\n transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n cursor: pointer;\n outline: none;\n :hover {\n        opacity: 1;\n      }`\n        \n        // export  const FaSistrix =styled.svg `\n        // color: red;` \n      \n    \n      \n    export const SearchFormButtonLabel =styled.span` \n    //position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    //clip-path: inset(50%); \n    border: 0;`\n       \n   \n      \nexport const SearchFormInput = styled.input`display: inline-block;\nwidth: 100%;\nfont: inherit;\nfont-size: 20px;\nborder: none;\noutline: none;\npadding-left: 4px;\npadding-right: 4px;\n::placeholder {\n        font: inherit;\n        font-size: 18px;\n      }`\n        \n// export const Wrapper = styled.div`\n//   display: inline-flex;\n//   align-items: center;\n//   position: relative;\n//   margin-bottom: 16px;\n//   text-transform: uppercase;\n// `;\n\n// export const Input = styled.input`\n//   padding: 8px 32px 8px 8px;\n//   border-radius: 4px;\n//   font: inherit;\n// `;\n\n// export const Icon = styled(HiSearch)`\n//   width: 20px;\n//   height: 20px;\n//   position: absolute;\n//   right: 6px;\n// `;\n","import toast from 'react-hot-toast'\nimport {FaSistrix} from 'react-icons/fa';\nimport React , {  useState}from 'react';\nimport {  SearchForm,SearchFormButton, SearchFormButtonLabel, SearchFormInput  } from './SearchBar.styled';\n\n\nexport const Searchbar =({onSubm})=>{\n  const [searchWord, setSearchWord] = useState(\"\");\n  const handleChange = evt => {\n    setSearchWord(evt.currentTarget.value.toLowerCase());\n  };\n  \n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (searchWord.trim() === '') {\n      toast.error('Please fill the search form ');\n      return;\n    }\n    \n   onSubm(searchWord);\n   \n  };\n  return ( \n  \n    <SearchForm  onSubmit={handleSubmit}>\n    <SearchFormButton type=\"submit\" >\n      <SearchFormButtonLabel><FaSistrix size={24}/></SearchFormButtonLabel>\n    </SearchFormButton>\n\n    <SearchFormInput \n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search movie\"\n      value={searchWord}\n      onChange={handleChange}/>\n  </SearchForm>\n     \n    );\n}","import  {  useState, useEffect}from 'react';\nimport toast from 'react-hot-toast'\nimport { useSearchParams } from \"react-router-dom\";\nimport { Status, keyApi, fetchFilms,BASE_URL} from 'components/Utils/FetchMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { Searchbar } from 'components/SearchBar/SearchBar';\n\nimport { FilmsList } from 'components/FilmList/FilmList';\n//  import { status,films } from 'hooks/fetchControls';\n// import { useFetchControls  } from 'hooks/fetchControls';\n\nexport const Movies =()=>{  \n    const [ status, setStatus] = useState(\"Status.IDLE\"); \n    const [ films, setFilms] = useState (null)\n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryFilm = searchParams.get(\"query\");\n   \n\nconst handleFormSubmit = query => {\n    const nextQuery = query!== \"\" ? { query } : {};\n    setSearchParams(nextQuery);\n    \n    \n    //setPage(1) \n};\n// const keyApi='894ef72300682f1db325dae2afe3e7e2'\nuseEffect(() => { \n    if (queryFilm){setStatus(Status.PENDING )\n       const searchUrl =\n       `${BASE_URL}search/movie?api_key=${keyApi}&query=${queryFilm}&page=`;\n\nasync function fetchData() {\n    try { \n        const films  = await fetchFilms(1,searchUrl);\n    if(films.results.length===0){\n        toast.error('We did not find anything. Try again with a new word!');\n        setStatus(Status.IDLE ) \n        setSearchParams({})\n    return}\n   \n    setFilms(films.results)\n    setStatus(Status.RESOLVED)\n} catch (error) {setStatus(Status.REJECTED )\n    toast.error(\"Ups... Something is wrong. Try again!\",{duration: 4000,\n  position: 'top-center'}, ) \n}\n}\n\nfetchData();\n}\n \n}, [queryFilm, setSearchParams])\n\n// console.log(\"in F\",films)\nif(status===\"pending\"){return <Loader/>}\n\n  return ( \n    <>\n           <Searchbar onSubm={handleFormSubmit}/>\n           {status===\"pending\" && (<Loader/>)}\n          { status === 'resolved'?\n (<FilmsList films={films}></FilmsList>):null}\n\n    </>    \n  )\n   \n    \n       \n      \n}\nexport default Movies;\n//if (status === 'resolved'){ \n //   <FilmsList films={films}></FilmsList>}\n//https://api.themoviedb.org/3/search/movie?api_key=894ef72300682f1db325dae2afe3e7e2&page=1&query=dog"],"names":["Container","styled","CardWrapper","FilmName","FilmsList","films","location","useLocation","console","log","map","film","to","id","state","from","src","poster_path","alt","original_title","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","Searchbar","onSubm","useState","searchWord","setSearchWord","onSubmit","evt","preventDefault","trim","toast","type","size","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Movies","status","setStatus","setFilms","useSearchParams","searchParams","setSearchParams","queryFilm","get","useEffect","fetchData","fetchFilms","searchUrl","results","length","Status","duration","position","BASE_URL","keyApi","Loader","query"],"sourceRoot":""}