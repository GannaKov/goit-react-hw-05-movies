{"version":3,"file":"static/js/539.02b4437c.chunk.js","mappings":"0RAMaA,EAAW,WAAO,IAAOC,GAAMC,EAAAA,EAAAA,MAAND,GACtC,GAA6BE,EAAAA,EAAAA,UAAS,eAAtC,eAAQC,EAAR,KAAgBC,EAAhB,KACA,GAAyBF,EAAAA,EAAAA,UAAU,MAAnC,eAAQG,EAAR,KAAcC,EAAd,KAmBC,OAlBDC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,sGAESC,EAFT,UAGMC,EAAAA,GAHN,iBAGuBT,EAHvB,4BAG6CU,EAAAA,IAH7C,UAKoBC,EAAAA,EAAAA,IAAUH,GAL9B,OAKOH,EALP,OAOCC,EAAQD,EAAKA,MACbO,QAAQC,IAAI,OAAQR,GACpBD,EAAUU,EAAAA,GAAAA,UATX,kDAWaV,EAAUU,EAAAA,GAAAA,UACpBC,EAAAA,GAAAA,MAAY,wCAAwC,CAACC,SAAU,IACjEC,SAAU,eAbX,2DADY,sBAACb,EAAUU,EAAAA,GAAAA,SAAX,mCAiBfI,EAAY,GAAC,CAAClB,IACF,YAATG,GAA2B,SAAC,IAAD,IACf,aAAXA,GAMC,yBACGE,EAAKc,QAAS,8BAAMd,EAAKe,KAAI,SAACC,GAAD,OAC9B,2BACI,gBAAKC,IAAK,sCAAsCD,EAAME,aAAcC,IAAKH,EAAMI,QAC/E,wBAAKJ,EAAMI,QACX,sCAAcJ,EAAMK,eAHfL,EAAMM,UADe,QAMrB,2DAbhB,CAgBA,EACD,W,8EC1CaC,EAAQ,kBAAK,SAAC,KAAD,CACxBC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CACZC,UAAW,QACXC,WAAY,MACZC,UAAW,mBAEbC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAXlC,C,uJCHd,IAAM5B,EAAO,mCACPD,EAAS,gCACRK,EAAS,CACrByB,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,YAEL,SAAS/B,EAAUH,GACxB,OAAOmC,MAAMnC,GAAUoC,MAAK,SAAAC,GAC1B,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAAS1C,QAE3B,OAAO0C,EAASG,MACjB,GACF,CACM,SAASC,EAAWC,EAAM1C,GAC7B,OAAOmC,MAOF,SAAkBQ,EAAY3C,GAKnC,MAAM,GAAN,OAAUA,GAAV,OAAqB2C,EACtB,CAbcC,CAASF,EAAM1C,IAAWoC,MAAK,SAAAC,GAC1C,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAAS1C,QAE3B,OAAO0C,EAASG,MACjB,GACF,C","sources":["components/FilmCast/FilmCast.js","components/Loader/Loader.js","components/Utils/FetchMovies.js"],"sourcesContent":["import  {  useState, useEffect}from 'react';\nimport { useParams } from \"react-router-dom\";\nimport toast from 'react-hot-toast'\nimport { Status, keyApi, fetchFilm,BASE_URL} from 'components/Utils/FetchMovies'; \nimport { Loader } from 'components/Loader/Loader';\n\nexport const FilmCast = () => {const {id} = useParams();\nconst [ status, setStatus] = useState(\"Status.IDLE\"); \nconst [ cast, setCast] = useState (null)\nuseEffect(() => {setStatus(Status.PENDING )\n    async function fetchData() {\n   try {\n       const trendUrl =\n       `${BASE_URL}movie/${id}/credits?api_key=${keyApi}`;\n      //https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n     const cast = await fetchFilm(trendUrl);\n     \n     setCast(cast.cast)\n     console.log(\"cast\", cast)\n     setStatus(Status.RESOLVED)\n   }\n     catch (err){setStatus(Status.REJECTED )\n       toast.error(\"Ups... Something is wrong. Try again!\",{duration: 4000,\n     position: 'top-center'}, ) }\n     \n }\n fetchData()},[id])\n if(status===\"pending\"){return <Loader/>}\n if (status === 'resolved'){ \n   \n\n  return (\n    \n      \n      <div>\n        {cast.length?( <ul> {cast.map((actor) => (\n        <li key={actor.credit_id  }>\n            <img src={'https://www.themoviedb.org/t/p/w300'+actor.profile_path} alt={actor.name} />\n            <h3>{actor.name}</h3>\n            <p>Character {actor.character}</p>\n        </li>\n      ))}</ul>):(<p>There are no Information</p>)}\n      </div>\n  );}\n}\nexport default FilmCast\n","import { ColorRing } from  'react-loader-spinner'\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport const Loader =()=>(<ColorRing\n  visible={true}\n  height=\"90\"\n  width=\"90\"\n  ariaLabel=\"blocks-loading\"\n  wrapperStyle={{\n    marginTop: \"150px\",\n    marginLeft: \"50%\",\n    transform: \"translate(-50%)\",\n  }}\n  wrapperClass=\"blocks-wrapper\"\n  colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n/>)","export const keyApi='894ef72300682f1db325dae2afe3e7e2'\nexport const BASE_URL=\"https://api.themoviedb.org/3/\"\nexport  const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport function fetchFilm(trendUrl) {\n  return fetch(trendUrl).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\nexport function fetchFilms(page, trendUrl) {\n    return fetch(buildUrl(page, trendUrl)).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    });\n  }\n  export function buildUrl(pageNumber, trendUrl) {\n    // const mediaType = `movie`;\n    // const time_window = `day`;\n    //trend Url -->https://api.themoviedb.org/3/trending/movie/week?api_key=894ef72300682f1db325dae2afe3e7e2&page=\n    //https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n    return `${trendUrl}${pageNumber}`;\n  }"],"names":["FilmCast","id","useParams","useState","status","setStatus","cast","setCast","useEffect","trendUrl","BASE_URL","keyApi","fetchFilm","console","log","Status","toast","duration","position","fetchData","length","map","actor","src","profile_path","alt","name","character","credit_id","Loader","visible","height","width","ariaLabel","wrapperStyle","marginTop","marginLeft","transform","wrapperClass","colors","IDLE","PENDING","RESOLVED","REJECTED","fetch","then","response","ok","Error","json","fetchFilms","page","pageNumber","buildUrl"],"sourceRoot":""}