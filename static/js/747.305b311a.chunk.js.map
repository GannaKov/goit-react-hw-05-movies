{"version":3,"file":"static/js/747.305b311a.chunk.js","mappings":"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","sources":["components/FilmList/FilmList.styled.js","components/FilmList/FilmList.js","components/Loader/Loader.js","components/Utils/FetchMovies.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 280px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\nimg { min-height: 455px;\n    height: 455px;}\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const FilmName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { Link  } from \"react-router-dom\";\nimport { Container, CardWrapper, FilmName } from \"./FilmList.styled\";\n\nexport const FilmsList = ({ location, films }) => {\n  return (\n    <Container>\n      {films.map((film) => (\n        <CardWrapper key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{from:location}} > \n            <img src={'https://www.themoviedb.org/t/p/w500'+film.poster_path} alt={film.original_title} />\n            <FilmName>{film.original_title}</FilmName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nFilmsList.propTypes = {\n  location:PropTypes.objectOf(PropTypes.string),\n  films:PropTypes.arrayOf(PropTypes.object).isRequired,\n}","import { ColorRing } from  'react-loader-spinner'\n\n\nexport const Loader =()=>(\n<ColorRing\n  visible={true}\n  height=\"90\"\n  width=\"90\"\n  ariaLabel=\"blocks-loading\"\n  wrapperStyle={{\n    marginTop: \"150px\",\n    marginLeft: \"50%\",\n    transform: \"translate(-50%)\",\n  }}\n  wrapperClass=\"blocks-wrapper\"\n  colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n/>)","export const keyApi='894ef72300682f1db325dae2afe3e7e2'\nexport const BASE_URL=\"https://api.themoviedb.org/3/\"\nexport  const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport function fetchFilm(trendUrl) {\n  return fetch(trendUrl).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\nexport function fetchFilms(page, trendUrl) {\n    return fetch(buildUrl(page, trendUrl)).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    });\n  }\n  export function buildUrl(pageNumber, trendUrl) {\n    // const mediaType = `movie`;\n    // const time_window = `day`;\n    //trend Url -->https://api.themoviedb.org/3/trending/movie/week?api_key=894ef72300682f1db325dae2afe3e7e2&page=\n    //https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n    return `${trendUrl}${pageNumber}`;\n  }","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  border: 1px solid black;\n  overflow: hidden;\n  margin-bottom: 16px;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport toast from 'react-hot-toast'\nimport {FaSistrix} from 'react-icons/fa';\nimport React , {  useState}from 'react';\nimport {  SearchForm,SearchFormButton, SearchFormButtonLabel, SearchFormInput  } from './SearchBar.styled';\n\nexport const Searchbar =({onSubm})=>{\n  const [searchWord, setSearchWord] = useState(\"\");\n  const handleChange = evt => {\n    setSearchWord(evt.currentTarget.value.toLowerCase());\n  };\n  \n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (searchWord.trim() === '') {\n      toast.error('Please fill the search form ');\n      return;\n    }\n    \n   onSubm(searchWord);\n   \n  };\n  return ( \n  \n    <SearchForm  onSubmit={handleSubmit}>\n    <SearchFormButton type=\"submit\" >\n      <SearchFormButtonLabel><FaSistrix size={24}/></SearchFormButtonLabel>\n    </SearchFormButton>\n\n    <SearchFormInput \n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search movie\"\n      value={searchWord}\n      onChange={handleChange}/>\n  </SearchForm>\n     \n    );\n}\nSearchbar.propTypes = {\n  onSubm:PropTypes.func.isRequired\n}","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  Status,\n  keyApi,\n  fetchFilms,\n  BASE_URL,\n} from 'components/Utils/FetchMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { Searchbar } from 'components/SearchBar/SearchBar';\nimport { FilmsList } from 'components/FilmList/FilmList';\n\nexport const Movies = () => {\n  const location = useLocation();\n  const [status, setStatus] = useState('Status.IDLE');\n  const [films, setFilms] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryFilm = searchParams.get('query');\n\n  const handleFormSubmit = query => {\n    const nextQuery = query !== '' ? { query } : {};\n    setSearchParams(nextQuery);\n  };\n  useEffect(() => {\n    if (queryFilm) {\n      setStatus(Status.PENDING);\n      const searchUrl = `${BASE_URL}search/movie?api_key=${keyApi}&query=${queryFilm}&page=`;\n\n      async function fetchData() {\n        try {\n          const films = await fetchFilms(1, searchUrl);\n          if (films.results.length === 0) {\n            toast.error('We did not find anything. Try again with a new word!');\n            setStatus(Status.IDLE);\n            setSearchParams({});\n            return;\n          }\n          setFilms(films.results);\n          setStatus(Status.RESOLVED);\n        } catch (error) {\n          setStatus(Status.REJECTED);\n          toast.error('Ups... Something is wrong. Try again!', {\n            duration: 4000,\n            position: 'top-center',\n          });\n        }\n      }\n      fetchData();\n    }\n  }, [queryFilm, setSearchParams]);\n  if (status === 'pending') {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <Searchbar onSubm={handleFormSubmit} />\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' ? (\n        <FilmsList location={location} films={films}></FilmsList>\n      ) : null}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["Container","styled","CardWrapper","FilmName","FilmsList","location","films","map","film","to","id","state","from","src","poster_path","alt","original_title","Loader","visible","height","width","ariaLabel","wrapperStyle","marginTop","marginLeft","transform","wrapperClass","colors","keyApi","BASE_URL","Status","IDLE","PENDING","RESOLVED","REJECTED","fetchFilm","trendUrl","fetch","then","response","ok","Error","status","json","fetchFilms","page","pageNumber","buildUrl","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","Searchbar","onSubm","useState","searchWord","setSearchWord","onSubmit","evt","preventDefault","trim","toast","type","size","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Movies","useLocation","setStatus","setFilms","useSearchParams","searchParams","setSearchParams","queryFilm","get","useEffect","fetchData","searchUrl","results","length","duration","position","query"],"sourceRoot":""}