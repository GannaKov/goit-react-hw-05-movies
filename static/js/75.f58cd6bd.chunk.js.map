{"version":3,"file":"static/js/75.f58cd6bd.chunk.js","mappings":"4MAEaA,EAAYC,EAAAA,GAAAA,IAAH,2GAMTC,EAAcD,EAAAA,GAAAA,IAAH,oKAUXE,EAAWF,EAAAA,GAAAA,GAAH,mG,SCdRG,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,OACE,SAACN,EAAD,UACGM,EAAMC,KAAI,SAACC,GAAD,OACT,SAACN,EAAD,WACE,UAAC,KAAD,CAAMO,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAACC,KAAKP,GAA7C,WACE,gBAAKQ,IAAK,sCAAsCL,EAAKM,YAAaC,IAAKP,EAAKQ,kBAC5E,SAACb,EAAD,UAAWK,EAAKQ,qBAHFR,EAAKE,GADd,KAUhB,C,8ECdYO,EAAQ,kBACrB,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CACZC,UAAW,QACXC,WAAY,MACZC,UAAW,mBAEbC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAZlC,C,uJCHd,IAAMC,EAAO,mCACPC,EAAS,gCACRC,EAAS,CACrBC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,YAEL,SAASC,EAAUC,GACxB,OAAOC,MAAMD,GAAUE,MAAK,SAAAC,GAC1B,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CACM,SAASC,EAAWC,EAAMT,GAC7B,OAAOC,MAOF,SAAkBS,EAAYV,GAKnC,MAAM,GAAN,OAAUA,GAAV,OAAqBU,EACtB,CAbcC,CAASF,EAAMT,IAAWE,MAAK,SAAAC,GAC1C,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C,+KCfUK,EAAO,WAElB,IAAM3C,GAAW4C,EAAAA,EAAAA,MACjB,GAA2BC,EAAAA,EAAAA,UAAS,MAApC,eAAQ5C,EAAR,KAAe6C,EAAf,KACA,GAA6BD,EAAAA,EAAAA,UAAS,eAAtC,eAAQR,EAAR,KAAgBU,EAAhB,KAeF,OAdEC,EAAAA,EAAAA,YAAU,WAAOD,EAAUtB,EAAAA,GAAAA,SACzB,IAAMM,EAAQ,UACXP,EAAAA,GADW,sCAC2BD,EAAAA,GAD3B,UADA,wCAGd,8GAEyBgB,EAAAA,EAAAA,IAAW,EAAER,GAFtC,OAEU9B,EAFV,OAGI6C,EAAS7C,EAAMgD,SACfF,EAAUtB,EAAAA,GAAAA,UAJd,gDAKgBsB,EAAUtB,EAAAA,GAAAA,UACpByB,EAAAA,GAAAA,MAAY,wCAAwC,CAACC,SAAU,IACjEC,SAAU,eAPd,0DAHc,0DAYZC,EACL,GAAE,IACS,YAAThB,GAA2B,SAAC,IAAD,IACf,aAAXA,GAEA,+BACD,SAAC,IAAD,CAAWrC,SAAWA,EAAUC,MAAOA,WAH1C,CAOG,EACD,W","sources":["components/FilmList/FilmList.styled.js","components/FilmList/FilmList.js","components/Loader/Loader.js","components/Utils/FetchMovies.js","pages/Home/Home.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 280px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\nimg { min-height: 455px;\n    height: 455px;}\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const FilmName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { Link  } from \"react-router-dom\";\nimport { Container, CardWrapper, FilmName } from \"./FilmList.styled\";\n\nexport const FilmsList = ({ location, films }) => {\n  return (\n    <Container>\n      {films.map((film) => (\n        <CardWrapper key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{from:location}} > \n            <img src={'https://www.themoviedb.org/t/p/w500'+film.poster_path} alt={film.original_title} />\n            <FilmName>{film.original_title}</FilmName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nFilmsList.propTypes = {\n  location:PropTypes.objectOf(PropTypes.string),\n  films:PropTypes.arrayOf(PropTypes.object).isRequired,\n}","import { ColorRing } from  'react-loader-spinner'\n\n\nexport const Loader =()=>(\n<ColorRing\n  visible={true}\n  height=\"90\"\n  width=\"90\"\n  ariaLabel=\"blocks-loading\"\n  wrapperStyle={{\n    marginTop: \"150px\",\n    marginLeft: \"50%\",\n    transform: \"translate(-50%)\",\n  }}\n  wrapperClass=\"blocks-wrapper\"\n  colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n/>)","export const keyApi='894ef72300682f1db325dae2afe3e7e2'\nexport const BASE_URL=\"https://api.themoviedb.org/3/\"\nexport  const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport function fetchFilm(trendUrl) {\n  return fetch(trendUrl).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\nexport function fetchFilms(page, trendUrl) {\n    return fetch(buildUrl(page, trendUrl)).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    });\n  }\n  export function buildUrl(pageNumber, trendUrl) {\n    // const mediaType = `movie`;\n    // const time_window = `day`;\n    //trend Url -->https://api.themoviedb.org/3/trending/movie/week?api_key=894ef72300682f1db325dae2afe3e7e2&page=\n    //https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n    return `${trendUrl}${pageNumber}`;\n  }","import {  useState, useEffect}from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport toast from 'react-hot-toast'\nimport { Loader } from 'components/Loader/Loader';\nimport { FilmsList } from 'components/FilmList/FilmList';\nimport { Status, keyApi, fetchFilms,BASE_URL} from 'components/Utils/FetchMovies'; \n\n\nexport const Home = () => {\n    \n  const location = useLocation();\n  const [ films, setFilms] = useState(null); \n  const [ status, setStatus] = useState(\"Status.IDLE\"); \n  useEffect(() => {setStatus(Status.PENDING )\n    const trendUrl =\n    `${BASE_URL}trending/movie/day?api_key=${keyApi}&page=`;\n    async function fetchData() {\n      try {\n        const films  = await fetchFilms(1,trendUrl);\n        setFilms(films.results)\n        setStatus(Status.RESOLVED)}\n        catch (err){setStatus(Status.REJECTED )\n          toast.error(\"Ups... Something is wrong. Try again!\",{duration: 4000,\n        position: 'top-center'}, ) }\n    }\n      fetchData()  \n}, [])\nif(status===\"pending\"){return <Loader/>}\nif (status === 'resolved'){ \n    return (\n    <>\n   <FilmsList location ={location} films={films}></FilmsList>\n      </>\n  );}\n   \n  };\n  export default Home;  "],"names":["Container","styled","CardWrapper","FilmName","FilmsList","location","films","map","film","to","id","state","from","src","poster_path","alt","original_title","Loader","visible","height","width","ariaLabel","wrapperStyle","marginTop","marginLeft","transform","wrapperClass","colors","keyApi","BASE_URL","Status","IDLE","PENDING","RESOLVED","REJECTED","fetchFilm","trendUrl","fetch","then","response","ok","Error","status","json","fetchFilms","page","pageNumber","buildUrl","Home","useLocation","useState","setFilms","setStatus","useEffect","results","toast","duration","position","fetchData"],"sourceRoot":""}