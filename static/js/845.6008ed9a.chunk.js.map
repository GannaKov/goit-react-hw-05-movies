{"version":3,"file":"static/js/845.6008ed9a.chunk.js","mappings":"6RAQaA,EAAc,WACvB,IAAOC,GAAMC,EAAAA,EAAAA,MAAND,GACP,GAA6BE,EAAAA,EAAAA,UAAS,eAAtC,eAAQC,EAAR,KAAgBC,EAAhB,KACJ,GAA8BF,EAAAA,EAAAA,UAAU,MAAxC,eAAOG,EAAP,KAAgBC,EAAhB,KAmBC,OAlBDC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,sGAESC,EAFT,UAGMC,EAAAA,GAHN,iBAGuBT,EAHvB,4BAG6CU,EAAAA,IAH7C,UAKoBC,EAAAA,EAAAA,IAAUH,GAL9B,OAKOI,EALP,OAOCN,EAAWM,EAAKC,SAChBC,QAAQC,IAAI,UAAUH,EAAKC,SAC3BT,EAAUY,EAAAA,GAAAA,UATX,kDAWaZ,EAAUY,EAAAA,GAAAA,UACpBC,EAAAA,GAAAA,MAAY,wCAAwC,CAACC,SAAU,IACjEC,SAAU,eAbX,2DADY,sBAACf,EAAUY,EAAAA,GAAAA,SAAX,mCAiBfI,EAAY,GAAC,CAACpB,IACF,YAATG,GAA2B,SAAC,IAAD,IACf,aAAXA,GAMC,yBACGE,EAAQgB,QAAQ,8BAAMhB,EAAQiB,KAAI,SAACC,GAAD,OACnC,2BAEI,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,cACX,uBAAIF,EAAOG,YAJNH,EAAOvB,GADmB,QAQrC,2DAfL,CAqBI,EACH,W,8EClDW2B,EAAQ,kBAAK,SAAC,KAAD,CACxBC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CACZC,UAAW,QACXC,WAAY,MACZC,UAAW,mBAEbC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAXlC,C,uJCHd,IAAM3B,EAAO,mCACPD,EAAS,gCACRO,EAAS,CACrBsB,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,YAEL,SAAS9B,EAAUH,GACxB,OAAOkC,MAAMlC,GAAUmC,MAAK,SAAAC,GAC1B,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASzC,QAE3B,OAAOyC,EAASG,MACjB,GACF,CACM,SAASC,EAAWC,EAAMzC,GAC7B,OAAOkC,MAOF,SAAkBQ,EAAY1C,GAKnC,MAAM,GAAN,OAAUA,GAAV,OAAqB0C,EACtB,CAbcC,CAASF,EAAMzC,IAAWmC,MAAK,SAAAC,GAC1C,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASzC,QAE3B,OAAOyC,EAASG,MACjB,GACF,C","sources":["components/Filmreviews/FilmReviews.js","components/Loader/Loader.js","components/Utils/FetchMovies.js"],"sourcesContent":["import  {  useState, useEffect}from 'react';\nimport { useParams } from \"react-router-dom\";\nimport toast from 'react-hot-toast'\nimport { Status, keyApi, fetchFilm,BASE_URL} from 'components/Utils/FetchMovies'; \nimport { Loader } from 'components/Loader/Loader';\n\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const FilmReviews = () => {\n    const {id} = useParams();\n    const [ status, setStatus] = useState(\"Status.IDLE\"); \nconst [reviews, setReviews] = useState (null)\nuseEffect(() => {setStatus(Status.PENDING )\n    async function fetchData() {\n   try {\n       const trendUrl =\n       `${BASE_URL}movie/${id}/reviews?api_key=${keyApi}`;\n      \n     const data = await fetchFilm(trendUrl);\n     \n     setReviews(data.results)\n     console.log(\"reviews\",data.results)\n     setStatus(Status.RESOLVED)\n   }\n     catch (err){setStatus(Status.REJECTED )\n       toast.error(\"Ups... Something is wrong. Try again!\",{duration: 4000,\n     position: 'top-center'}, ) }\n     \n }\n fetchData()},[id])\n if(status===\"pending\"){return <Loader/>}\n if (status === 'resolved'){ \n   \n  \n  return (\n  \n      \n      <div>\n        {reviews.length?(<ul> {reviews.map((review) => (\n        <li key={review.id  }>\n            \n            <p>{review.author}</p>\n            <p>{review.created_at}</p>\n            <p>{review.content}</p>\n        </li>\n      ))}</ul>\n   ):(<p>There are no reviews yet</p>)}\n      \n      </div>\n     \n   \n \n  )}}\n  export default FilmReviews","import { ColorRing } from  'react-loader-spinner'\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport const Loader =()=>(<ColorRing\n  visible={true}\n  height=\"90\"\n  width=\"90\"\n  ariaLabel=\"blocks-loading\"\n  wrapperStyle={{\n    marginTop: \"150px\",\n    marginLeft: \"50%\",\n    transform: \"translate(-50%)\",\n  }}\n  wrapperClass=\"blocks-wrapper\"\n  colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n/>)","export const keyApi='894ef72300682f1db325dae2afe3e7e2'\nexport const BASE_URL=\"https://api.themoviedb.org/3/\"\nexport  const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport function fetchFilm(trendUrl) {\n  return fetch(trendUrl).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\nexport function fetchFilms(page, trendUrl) {\n    return fetch(buildUrl(page, trendUrl)).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    });\n  }\n  export function buildUrl(pageNumber, trendUrl) {\n    // const mediaType = `movie`;\n    // const time_window = `day`;\n    //trend Url -->https://api.themoviedb.org/3/trending/movie/week?api_key=894ef72300682f1db325dae2afe3e7e2&page=\n    //https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n    return `${trendUrl}${pageNumber}`;\n  }"],"names":["FilmReviews","id","useParams","useState","status","setStatus","reviews","setReviews","useEffect","trendUrl","BASE_URL","keyApi","fetchFilm","data","results","console","log","Status","toast","duration","position","fetchData","length","map","review","author","created_at","content","Loader","visible","height","width","ariaLabel","wrapperStyle","marginTop","marginLeft","transform","wrapperClass","colors","IDLE","PENDING","RESOLVED","REJECTED","fetch","then","response","ok","Error","json","fetchFilms","page","pageNumber","buildUrl"],"sourceRoot":""}